{
	"info": {
		"_postman_id": "6d624402-3061-465d-a1da-1d1c40fd9764",
		"name": "ReqResRequests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25411685"
	},
	"item": [
		{
			"name": "GetListOfAllUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Total returned is 12\", function () {\r",
							"    pm.expect(pm.response.json().total).to.equal(12);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetExampleTestUserId2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Correct UserId is returned\", function () {\r",
							"    pm.expect(pm.response.json().data.id).eqls(2);\r",
							"});\r",
							"pm.test(\"Expected email address is returned\", function () {\r",
							"    pm.expect(pm.response.json().data.email).to.equal(\"janet.weaver@reqres.in\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetInvalidTestUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response is empty\", function () {\r",
							"    pm.expect(pm.response.json()).is.empty;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/23",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteExampleUserId2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is No Content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewExampleUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.status.includes(200,201,202,203,204);\r",
							"});\r",
							"pm.test(\"Correct UserId is returned\", function () {\r",
							"    pm.expect(pm.response.json().id).is.not.empty;\r",
							"});\r",
							"pm.test(\"Name and job matches expected\", function () {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"morpheus\"),\r",
							"    pm.expect(pm.response.json().job).to.equal(\"leader\");\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PatchExistingExampleUserId2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Job changed to zion resident\", function () {\r",
							"    pm.expect(pm.response.json().job).is.equal(\"zion resident\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const moment = require('moment');\r",
							"pm.globals.set(\"today\", moment().format(\"MM/DD/YYYY\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostExampleRegisteredUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.status.includes(200,201,202,203,204);\r",
							"});\r",
							"pm.test(\"Expected token is returned\", function () {\r",
							"    pm.expect(pm.response.json().token).eql('QpwL5tke4Pnpja7X4');\r",
							"});\r",
							"pm.test(\"A UserId is returned\", function () {\r",
							"    pm.expect(pm.response.json().id).is.not.null;\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewSpecialUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"testUserId\", pm.response.json().id);\r",
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.status.includes(200,201,202,203,204);\r",
							"});\r",
							"pm.test(\"A UserId is returned\", function () {\r",
							"    pm.expect(pm.response.json().id).is.not.null;\r",
							"});\r",
							"pm.test(\"Name and job matches expected\", function () {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"HowardDuck\"),\r",
							"    pm.expect(pm.response.json().job).to.equal(\"Superhero\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"HowardDuck\",\r\n    \"job\": \"Superhero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PatchSpecialUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"job\": \"PsychedelicSuperhero\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{testUserId}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{testUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetNewSpecialUserAdded",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is Not Found - because Post aren't saved\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/{{testUserId}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{testUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteSpecialUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is No Content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/{{testUserId}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{testUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewRandomUserFromPreRequestScript",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const newUsers = [{\r",
							"   name: \"ClintBarton\",\r",
							"   job: \"archer\"\r",
							"}, {\r",
							"   name: \"TonyStark\",\r",
							"   job: \"EccentricMillionaire\"\r",
							"}, {\r",
							"   name: \"KalEl\",\r",
							"   job: \"alien\"\r",
							"}, {\r",
							"   name: \"DianaPrince\",\r",
							"   job: \"Amazon\"\r",
							"}, {\r",
							"   name: \"BruceBanner\",\r",
							"   job: \"scientist\"\r",
							"}, {\r",
							"   name: \"LexLuthor\",\r",
							"   job: \"MadGenius\"\r",
							"}, {\r",
							"   name: \"Magneto\",\r",
							"   job: \"MagneticMayhem\"\r",
							"}, {   \r",
							"   name: \"MattMurdoch\",\r",
							"   job: \"lawyer\"\r",
							"}, {   \r",
							"   name: \"PeterParker\",\r",
							"   job: \"WebShooter\"\r",
							"}];\r",
							"\r",
							"const newUser = _.sample(newUsers);\r",
							"\r",
							"pm.globals.set(\"name\", newUser.name);\r",
							"pm.globals.set(\"job\", newUser.job);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"newRandomUserId\", pm.response.json().id);\r",
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.status.includes(200, 201, 202, 203, 204);\r",
							"});\r",
							"pm.test(\"A UserId is returned\", function () {\r",
							"    pm.expect(pm.response.json().id).is.not.null;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"{{name}}\",\r\n   \"job\": \"{{job}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PatchExistingRandomNewUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Name and job matches expected\", function () {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"NoFace\"),\r",
							"    pm.expect(pm.response.json().job).to.equal(\"spirit\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"NoFace\",\r\n    \"job\": \"spirit\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{newRandomUserId}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{newRandomUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteRandomNewUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is No Content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Eliminated\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{newRandomUserId}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{newRandomUserId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "FinalGetFullListAndClearVars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.unset(\"testUserId\");\r",
							"pm.globals.unset(\"newRandomUserId\");\r",
							"pm.globals.unset(\"name\");\r",
							"pm.globals.unset(\"job\");\r",
							"\r",
							"pm.test(\"Successful status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Total returned is 12\", function () {\r",
							"    pm.expect(pm.response.json().total).to.equal(12);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	]
}